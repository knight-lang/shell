#!/bin/dash

################################################################################
#                                    Setup                                     #
################################################################################

## Set options
set -o nounset
set -o noglob

# Naming scheme:
# READ_ONLY
# Global_Variables
# local_variable
# _variable_that_doesnt_need_to_be_local

## Values:
# i-?\d+                   - integer
# s.*                      - string
# [TFN]                    - true/false/null
# v[a-z_][a-z0-9_]         - variable
# a(\d+)(${ARY_SEP}value)* - array; \1 is len, \2+ is elements. value cannot be an ast
# A(\d+)                   - array ref; `eval`ing it will give you the original array
# f(.)(${FN_SEP}value)*    - function; \1 is name, \2+ are arguments.
# F(\d+)                   - fn ref, `eval`ing it will give you the original AST
##

readonly FN_SEP=\( # "$(printf %d \'29)"; needs to be diff from ARY_SEP
readonly SCRIPT_NAME=${0##*/}
readonly NEWLINE='
'

## Print out a message and exit the program
die () {
	fmt=$1
	shift
	printf "%s: $fmt\\n" "$SCRIPT_NAME" "$@"
	exit 1
}

TODO () { die "TODO: $*"; }


KNIGHT_DIR=$(dirname "$0")
readonly KNIGHT_DIR

. "$KNIGHT_DIR/arrays.sh"
. "$KNIGHT_DIR/conversions.sh"
. "$KNIGHT_DIR/utilities.sh"
. "$KNIGHT_DIR/parsing.sh"
. "$KNIGHT_DIR/evaluating.sh"

eval_kn "$2"
# eval_kn <<'EOS'
# O ^ 9 3
# EOS
# run "$Reply"
